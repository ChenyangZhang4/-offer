字符流中第一个不重复的字符
请实现一个函数用来找出字符流中第一个只出现一次的字符。例如，当从字符流中只读出前两个字符"go"时，第一个只出现一次的字符是"g"。当从该字符流中读出前六个字符“google"时，第一个只出现一次的字符是"l"。
输出描述:
如果当前字符流没有存在出现一次的字符，返回#字符。

class Solution
{
public:
    string s;
  //Insert one char from stringstream
    void Insert(char ch)
    {
        s+=ch;
    }
  //return the first appearence once char in current stringstream
    char FirstAppearingOnce()
    {
        vector<int> v(129, -1);
        for(int i=0; i<s.size(); i++){
            if(v[s[i]-'\0']>=0)
                v[s[i]-'\0']=-2;
            else if(v[s[i]-'\0']==-2)
                continue;
            else
                v[s[i]-'\0']=(i+1);
        }
        int k=128;
        v[k]=s.size()+1;
        for(int i=0; i<v.size(); i++){
            if(v[i]>0 && v[k]>v[i])
                    k=i;
        }
        if(k==128)
            return '#';
        else
            return '\0'+k;
    }
};

//简化
class Solution
{
public:
  //Insert one char from stringstream
    string s;
    char hash[256]={0};
    void Insert(char ch)
    {
        s+=ch;
        hash[ch]++;
    }
  //return the first appearence once char in current stringstream
    char FirstAppearingOnce()
    {
         
        int size=s.size();
        for(int i=0;i<size;++i)
        {
            if(hash[s[i]]==1)
                return s[i];
        }
        return '#';
    }
};
