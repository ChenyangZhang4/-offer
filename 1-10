1、二维数组查找
在一个二维数组中（每个一维数组的长度相同），每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。

bool Find(int target, vector<vector<int> > array) {
    for(int i=0,j=array[0].size()-1; i<array.size()&&j>=0;){
        if(array[i][j]==target)
            return true;
        else if(array[i][j]<target)
            i+=1;
        else
            j-=1;
    }
    return false;
}


2、替换空格
请实现一个函数，将一个字符串中的每个空格替换成“%20”。例如，当字符串为We Are Happy.则经过替换之后的字符串为We%20Are%20Happy。

void replaceSpace(char *str,int length) {
    int count=0, oldlength=0;
    for(int i=0; str[i]!='\0'; i++){
        oldlength++;
        if(str[i]==' ')
            count++;
    }
    int newlength = oldlength+2*count;
    str[newlength]='\0';
    while(count>0){
        oldlength--;
        if(str[oldlength]==' '){
            str[--newlength]='0';
            str[--newlength]='2';
            str[--newlength]='%';
            count--;
        }
        else{
            str[--newlength]=str[oldlength];
        }
    }
}
