按之字形顺序打印二叉树
请实现一个函数按照之字形打印二叉树，即第一行按照从左到右的顺序打印，第二层按照从右至左的顺序打印，第三行按照从左到右的顺序打印，其他行以此类推。

//用两个栈且s2先压right再压left就不需要反转v了
vector<vector<int> > Print(TreeNode* pRoot) {
	vector<vector<int> > res;
	if (!pRoot)
		return res;
	stack<TreeNode*> s1, s2;
	s1.push(pRoot);
	vector<int> v;
	TreeNode* temp;
	while (!s1.empty() || !s2.empty()) {
		if (!s1.empty()) {
			while (!s1.empty()) {
				temp = s1.top();
				s1.pop();
				v.push_back(temp->val);
				if(temp->left)              //不能压入NULL
					s2.push(temp->left);
				if(temp->right)
					s2.push(temp->right);
			}
			res.push_back(v);
			v.clear();
		}
		else {
			while (!s2.empty()) {
				temp = s2.top();
				s2.pop();
				v.push_back(temp->val);
				if(temp->right)             //别写反了，会出错
					s1.push(temp->right);
				if(temp->left)
					s1.push(temp->left);
			}
			res.push_back(v);
			v.clear();
		}
	}
	return res;
}
