表示数值的字符串
请实现一个函数用来判断字符串是否表示数值（包括整数和小数）。例如，字符串"+100","5e2","-123","3.1416"和"-1E-16"都表示数值。 但是"12e","1a3.14","1.2.3","+-5"和"12e+4.3"都不是。

//简化
bool isNumeric(char* string){
	bool hasSign = false, hasDecimal = false, hasE = false;
	for (int i = 0; i < strlen(string); i++) {
		if (string[i] == '+' || string[i] == '-') {
			if (i > 0 && (string[i - 1] != 'e' && string[i - 1] != 'E'))
				return false;
			hasSign = true;
		}
		else if (string[i] == '.') {
			if (hasDecimal || hasE)
				return false;
			hasDecimal = true;
		}
		else if (string[i] == 'e' || string[i] == 'E') {
			if (i == strlen(string) - 1)
				return false;
			if (i == 0 || hasE)
				return false;
			hasE = true;
		}
		else if (string[i]<'0' || string[i]>'9')
			return false;
	}
	return true;
}

//麻烦的办法
bool isNumeric(char* string)
{
    if(*string=='\0')
        return false;
    if(*string=='+' || *string=='-')
        string+=1;
    if(*string=='\0' || *string=='e' || *string=='E')
        return false;
    int count_dot=0;
    while(*string!='\0'){
        if(*string>='0' && *string<='9')
            string+=1;
        else if(*string=='.' && count_dot==0){
            count_dot++;
            string+=1;
        }
        else if(*string=='e' || *string=='E')
            return isAfterE(string+1);
        else
            return false;
    }
    return true;
}
bool isAfterE(char* string){
    if(*string=='\0')
        return false;
    if(*string=='+' || *string=='-')
        string+=1;
    while(*string!='\0'){
        if(*string>='0' && *string<='9')
            string+=1;
        else
            return false;
    }
    return true;
}
