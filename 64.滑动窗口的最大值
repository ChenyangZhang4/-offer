滑动窗口的最大值
给定一个数组和滑动窗口的大小，找出所有滑动窗口里数值的最大值。例如，如果输入数组{2,3,4,2,6,2,5,1}及滑动窗口的大小3，那么一共存在6个滑动窗口，他们的最大值分别为{4,4,6,6,6,5}； 针对数组{2,3,4,2,6,2,5,1}的滑动窗口有以下6个： {[2,3,4],2,6,2,5,1}， {2,[3,4,2],6,2,5,1}， {2,3,[4,2,6],2,5,1}， {2,3,4,[2,6,2],5,1}， {2,3,4,2,[6,2,5],1}， {2,3,4,2,6,[2,5,1]}

//这是最笨的方法
vector<int> maxInWindows(const vector<int>& num, unsigned int size)
{
    vector<int> v;
    if(num.size()<size || size==0)
        return v;
    int maxNum;
    for(int i=0; i<num.size()-size+1; i++){
        maxNum=num[i];
        for(int j=i+1; j<i+size; j++){
            if(maxNum<num[j])
                maxNum=num[j];
        }
        v.push_back(maxNum);
    }
    return v;
}
