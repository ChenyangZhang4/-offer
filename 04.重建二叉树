重建二叉树
输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。例如输入前序遍历序列{1,2,4,7,3,5,6,8}和中序遍历序列{4,7,2,1,5,3,8,6}，则重建二叉树并返回。

TreeNode* reConstructBinaryTree(vector<int> pre,vector<int> vin) {
    if(pre.size()==0)
        return NULL;
    TreeNode* root = new TreeNode(pre[0]);
    vector<int> pre_left, pre_right, in_left, in_right;
    int i=0;
    for(; i<vin.size(); i++){
        if(pre[0]==vin[i])
            break;
    }
    int j=0;
    for(; j<i; j++){
        pre_left.push_back(pre[j+1]);
        in_left.push_back(vin[j]);
    }
    for(j=i+1; j<pre.size(); j++){
        pre_right.push_back(pre[j]);
        in_right.push_back(vin[j]);
    }
    root->left = reConstructBinaryTree(pre_left, in_left);
    root->right = reConstructBinaryTree(pre_right, in_right);
    return root;
}
