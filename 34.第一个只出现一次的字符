第一个只出现一次的字符
在一个字符串(0<=字符串长度<=10000，全部由字母组成)中找到第一个只出现一次的字符,并返回它的位置, 如果没有则返回 -1（需要区分大小写）.

int FirstNotRepeatingChar(string str) {
    map<char, int> m;
    for(int i=0; i<str.size(); i++){
        m[str[i]]++;
    }
    for(int i=0; i<str.size(); i++){
        if(m[str[i]]==1)
            return i;
    }
    return -1;
}

//自制hash表
int FirstNotRepeatingChar(string str) {
	vector<int> hashTable('z'-'A'+1, -2);   //这里容忍了'Z'和'a'之间的字符，这样就不用判断是大写还是小写了
	int index = 0;
	for (int i = 0; i < str.size(); i++) {
		index = str[i] - 'A';
		if (hashTable[index] == -2)
			hashTable[index] = i;
		else if (hashTable[index] >= 0)
			hashTable[index] = -1;
	}
	sort(hashTable.begin(), hashTable.end());
	for (int i = 0; i < hashTable.size(); i++) {
		if (hashTable[i] >= 0)
			return hashTable[i];
	}
	return -1;
}
