二叉搜索树的第k个结点
给定一棵二叉搜索树，请找出其中的第k小的结点。例如， （5，3，7，2，4，6，8）    中，按结点数值大小顺序第三小结点的值为4。

TreeNode* KthNode(TreeNode* pRoot, int k)
{
    if(!pRoot || k<=0)
        return NULL;
    vector<TreeNode*> v;
    inOrder(pRoot, v, k);
    if(v.size()>=k)
        return v[k-1];
    else
        return NULL;
}
void inOrder(TreeNode* root, vector<TreeNode*> &v, int k){
    if(root){
        inOrder(root->left, v, k);
        if(v.size()>k)
            return;
        v.push_back(root);
        inOrder(root->right, v, k);
    }
}

//不用vector而用计数n
TreeNode* KthNode(TreeNode* pRoot, int k)
{
	if (!pRoot || k < 1)
		return NULL;
	int n = 0;
	TreeNode* res = InOrderHelper(pRoot, n, k);
	return res;
}
TreeNode* InOrderHelper(TreeNode* root, int &n, int &k) {
	if (!root)
		return NULL;
	TreeNode* left = InOrderHelper(root->left, n, k);
	if (left)
		return left;
	n += 1;
	if (n == k)
		return root;
	TreeNode* right = InOrderHelper(root->right, n, k);
	if (right)
		return right;
	return NULL;
}
