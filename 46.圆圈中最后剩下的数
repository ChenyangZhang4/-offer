圆圈中最后剩下的数
让小朋友们围成一个大圈。然后,他随机指定一个数m,让编号为0的小朋友开始报数。每次喊到m-1的那个小朋友要出列唱首歌,然后可以在礼品箱中任意的挑选礼物,并且不再回到圈中,从他的下一个小朋友开始,继续0...m-1报数....这样下去....直到剩下最后一个小朋友(注：小朋友的编号是从0到n-1)

//下标是个问题，时间复杂度mn
int LastRemaining_Solution(int n, int m)
{
    vector<int> v(n);
    int i=0, j=0, k=0;
    for(; i<n-1; i++){
        k=-1;
        while(k<m-1){
            if(v[j]!=-1)
                k++;
            if(k==m-1)
                v[j]=-1;
            j++;
            if(j==n)
                j=0;
        }
    }
    for(i=0; i<n; i++){
        if(v[i]!=-1)
            return i;
    }
    return -1;
}

//用list和迭代器
int LastRemaining_Solution(int n, int m) {
    if (n == 0)
        return -1;
    list<int> numbers;
    for (int i = 0; i < n; i++)
        numbers.push_back(i);
    list<int>::iterator iter = numbers.begin();
    list<int>::iterator next;
    while (numbers.size() > 1) {
        for (int j = 0; j < (m-1) % numbers.size(); j++) {
            iter++;
            if (iter == numbers.end())
                iter = numbers.begin();
        }
        next = ++iter;
        if (next == numbers.end())
            next = numbers.begin();
        iter--;
        numbers.erase(iter);
        iter = next;
    }
    return *(numbers.begin());
}
